<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE MudletPackage>
<MudletPackage version="1.0">
    <TriggerPackage>
        <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
            <name>MajorMud</name>
            <script></script>
            <triggerType>0</triggerType>
            <conditonLineDelta>0</conditonLineDelta>
            <mStayOpen>0</mStayOpen>
            <mCommand></mCommand>
            <packageName></packageName>
            <mFgColor>#ff0000</mFgColor>
            <mBgColor>#ffff00</mBgColor>
            <mSoundFile></mSoundFile>
            <colorTriggerFgColor>#000000</colorTriggerFgColor>
            <colorTriggerBgColor>#000000</colorTriggerBgColor>
            <regexCodeList/>
            <regexCodePropertyList/>
            <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                <name>Get Gold</name>
                <script>send(&quot;g silver;g copper;g gold;rest;exp&quot;)</script>
                <triggerType>0</triggerType>
                <conditonLineDelta>0</conditonLineDelta>
                <mStayOpen>0</mStayOpen>
                <mCommand></mCommand>
                <packageName></packageName>
                <mFgColor>#ff0000</mFgColor>
                <mBgColor>#ffff00</mBgColor>
                <mSoundFile></mSoundFile>
                <colorTriggerFgColor>#000000</colorTriggerFgColor>
                <colorTriggerBgColor>#000000</colorTriggerBgColor>
                <regexCodeList>
                    <string>You gain</string>
                </regexCodeList>
                <regexCodePropertyList>
                    <integer>0</integer>
                </regexCodePropertyList>
            </Trigger>
            <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                <name>HP</name>
                <script></script>
                <triggerType>0</triggerType>
                <conditonLineDelta>0</conditonLineDelta>
                <mStayOpen>0</mStayOpen>
                <mCommand></mCommand>
                <packageName></packageName>
                <mFgColor>#ff0000</mFgColor>
                <mBgColor>#ffff00</mBgColor>
                <mSoundFile></mSoundFile>
                <colorTriggerFgColor>#000000</colorTriggerFgColor>
                <colorTriggerBgColor>#000000</colorTriggerBgColor>
                <regexCodeList>
                    <string>HP=</string>
                </regexCodeList>
                <regexCodePropertyList>
                    <integer>0</integer>
                </regexCodePropertyList>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>check health</name>
                    <script>health(matches[2])</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^\[HP=(\d+)</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>panic</name>
                    <script>if tonumber(matches[2]) &gt; HP_panic and tonumber(matches[2]) &gt; 10 then
	disableTrigger(&quot;panic&quot;)
	enableTrigger(&quot;healing&quot;)

	if autoEnterTrigger ~= nil then
		bg(&quot;DarkGreen&quot;)
		echo(&quot;enabling &quot;..tostring(autoEnterTrigger))
		bg(&quot;black&quot;)
		enableTrigger(autoEnterTrigger)
	end
end</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffaa00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^\[HP=(\d+)</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>healing</name>
                    <script>hp = matches[2]
if tonumber(hp) &gt;= HP_healthSpell and tonumber(hp) &lt; HP_autoEnter then
	if HP_maheAvail ~= nil then
		send(HP_maheAvail..&quot;;rest&quot;)
	elseif HP_miheAvail ~= nil then
		send(HP_miheAvail..&quot;;rest&quot;)
	else
		send(&quot;rest&quot;)
	end
	disableTrigger(&quot;healing&quot;)
	tempTimer(7, [[enableTrigger(&quot;healing&quot;)]])
	echo(&quot;Healing until &quot;..HP_autoEnter..&quot;\n&quot;)
else
	if tonumber(hp) &gt; HP_autoEnter then
		disableTrigger(&quot;healing&quot;)
		enableTrigger(&quot;check health&quot;)
		health(hp)
	end
end</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^\[HP=(\d+)</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
            </TriggerGroup>
            <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                <name>Towns</name>
                <script></script>
                <triggerType>0</triggerType>
                <conditonLineDelta>0</conditonLineDelta>
                <mStayOpen>0</mStayOpen>
                <mCommand></mCommand>
                <packageName></packageName>
                <mFgColor>#ff0000</mFgColor>
                <mBgColor>#ffff00</mBgColor>
                <mSoundFile></mSoundFile>
                <colorTriggerFgColor>#000000</colorTriggerFgColor>
                <colorTriggerBgColor>#000000</colorTriggerBgColor>
                <regexCodeList/>
                <regexCodePropertyList/>
                <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>Hunts</name>
                    <script></script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#55ff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>room</string>
                        <string>you</string>
                        <string>here</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>0</integer>
                        <integer>0</integer>
                        <integer>0</integer>
                    </regexCodePropertyList>
                    <Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>newhavenHunt</name>
                        <script>Hunt(matches[1])</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>slime</string>
                            <string>filthbug</string>
                            <string>kobold</string>
                            <string>lashworm</string>
                            <string>carrion</string>
                            <string>giant rat</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>0</integer>
                            <integer>0</integer>
                            <integer>0</integer>
                            <integer>0</integer>
                            <integer>0</integer>
                            <integer>0</integer>
                        </regexCodePropertyList>
                    </Trigger>
                    <Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>slumHunt</name>
                        <script>Hunt(matches[1])</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>orc</string>
                            <string>thug</string>
                            <string>cultist</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>0</integer>
                            <integer>0</integer>
                            <integer>0</integer>
                        </regexCodePropertyList>
                    </Trigger>
                    <Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>bearHunt</name>
                        <script>Hunt(&quot;bear&quot;)</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>bear</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>0</integer>
                        </regexCodePropertyList>
                    </Trigger>
                </TriggerGroup>
                <Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>auto enter newhaven</name>
                    <script>if tonumber(matches[2]) &gt;= HP_autoEnter then
	if current_room ~= 9 then
		echo(&quot;Must be above NewHaven arena\n&quot;)
	else
		autoEnterTrigger = &quot;auto enter newhaven&quot;
		tablePreps[&quot;newhaven&quot;]()
		disableTrigger(&quot;auto enter newhaven&quot;)
	end
end
	</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^\[HP=(\d+)</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>auto Stroll Slums</name>
                    <script>if tonumber(matches[2]) &gt;= HP_autoEnter then
	if current_room ~= 289 then
		autoEnterTrigger = &quot;Stroll Slums&quot; 
		echo(&quot;Loop must start at Slum Street Crossroads\nLoop will be unpaused\n&quot;) 
		walkLoop_pause = false
	else
		walkLoop_count = 1
		walkLoop_run = true
		walkLoop_pause = false
		walkLoop(slumsLoop)
	end
	disableTrigger(&quot;auto Stroll Slums&quot;)
end</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^\[HP=(\d+)</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>huntHold</name>
                    <script>HuntHold()
damage = 0</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>Combat Off</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>0</integer>
                    </regexCodePropertyList>
                </Trigger>
            </TriggerGroup>
            <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                <name>Chat</name>
                <script>selectCurrentLine()
echo(&quot;chat&quot;,getTimestamp(getLineCount()))
copy()
appendBuffer(&quot;chat&quot;)</script>
                <triggerType>0</triggerType>
                <conditonLineDelta>0</conditonLineDelta>
                <mStayOpen>0</mStayOpen>
                <mCommand></mCommand>
                <packageName></packageName>
                <mFgColor>#ff0000</mFgColor>
                <mBgColor>#ffff00</mBgColor>
                <mSoundFile></mSoundFile>
                <colorTriggerFgColor>#000000</colorTriggerFgColor>
                <colorTriggerBgColor>#000000</colorTriggerBgColor>
                <regexCodeList>
                    <string>say</string>
                    <string>gossip</string>
                    <string>whisper</string>
                    <string>telepaths</string>
                </regexCodeList>
                <regexCodePropertyList>
                    <integer>0</integer>
                    <integer>0</integer>
                    <integer>0</integer>
                    <integer>0</integer>
                </regexCodePropertyList>
            </Trigger>
            <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                <name>AutoMap</name>
                <script></script>
                <triggerType>0</triggerType>
                <conditonLineDelta>0</conditonLineDelta>
                <mStayOpen>0</mStayOpen>
                <mCommand></mCommand>
                <packageName></packageName>
                <mFgColor>#ff0000</mFgColor>
                <mBgColor>#ffff00</mBgColor>
                <mSoundFile></mSoundFile>
                <colorTriggerFgColor>#000000</colorTriggerFgColor>
                <colorTriggerBgColor>#000000</colorTriggerBgColor>
                <regexCodeList/>
                <regexCodePropertyList/>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="yes" isColorTriggerFg="yes" isColorTriggerBg="yes">
                    <name>Name_Line</name>
                    <script>--handle list
if matches[1]:findPattern(&quot;Quantity&quot;) ~= nil then
	disableTrigger(&quot;Name_Line&quot;)
	tempTimer(1, [[enableTrigger(&quot;Name_Line&quot;)]])
	return
end
if matches[1]:findPattern(&quot;%d&quot;) ~= nil or matches[1]:find(&quot;You&quot;) ~= nil or matches[1]:find(&quot;you&quot;) ~= nil then return end

disableTrigger(&quot;Name_Line&quot;)
enableTrigger(&quot;Exit_Line&quot;)

if manual_map then return end

enteredRoom(matches[1],nil)</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>1</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#00ff00</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>FG14BG2</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>6</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="yes" isColorTriggerFg="yes" isColorTriggerBg="no">
                    <name>Exit_Line</name>
                    <script>disableTrigger(&quot;Exit_Line&quot;)
enableTrigger(&quot;Name_Line&quot;)</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#00ff00</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^Obvious\sexits:\s(.*)</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
            </TriggerGroup>
            <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                <name>Experience</name>
                <script>setGauge(&quot;EXP&quot;,tonumber(matches[2]),tonumber(matches[5]),&quot;Exp &quot;..matches[2]..&quot;/&quot;..matches[5])
totExp = totExp + (tonumber(matches[2]) - prevExp)
prevExp = tonumber(matches[2])
</script>
                <triggerType>0</triggerType>
                <conditonLineDelta>0</conditonLineDelta>
                <mStayOpen>0</mStayOpen>
                <mCommand></mCommand>
                <packageName></packageName>
                <mFgColor>#ff0000</mFgColor>
                <mBgColor>#ffff00</mBgColor>
                <mSoundFile></mSoundFile>
                <colorTriggerFgColor>#000000</colorTriggerFgColor>
                <colorTriggerBgColor>#000000</colorTriggerBgColor>
                <regexCodeList>
                    <string>Exp:\s(\d+) Level: (\d+) Exp needed for next level: (\d+) \((\d+)\) </string>
                </regexCodeList>
                <regexCodePropertyList>
                    <integer>1</integer>
                </regexCodePropertyList>
            </Trigger>
            <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="yes" isColorTriggerFg="yes" isColorTriggerBg="no">
                <name>Damage</name>
                <script>damage = damage + tonumber(matches[2])
echo(&quot;DAMAGE&quot;,&quot;DAMAGE: &quot;..damage)</script>
                <triggerType>0</triggerType>
                <conditonLineDelta>0</conditonLineDelta>
                <mStayOpen>0</mStayOpen>
                <mCommand></mCommand>
                <packageName></packageName>
                <mFgColor>#ff0000</mFgColor>
                <mBgColor>#ffff00</mBgColor>
                <mSoundFile></mSoundFile>
                <colorTriggerFgColor>#800000</colorTriggerFgColor>
                <colorTriggerBgColor>#000000</colorTriggerBgColor>
                <regexCodeList>
                    <string>You\s.*\s(\d+)\s.*damage\!$</string>
                </regexCodeList>
                <regexCodePropertyList>
                    <integer>1</integer>
                </regexCodePropertyList>
            </Trigger>
        </TriggerGroup>
    </TriggerPackage>
    <TimerPackage>
        <Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
            <name>Combat</name>
            <script>CombatTimer = true
disableTimer(&quot;combat&quot;)</script>
            <command></command>
            <packageName></packageName>
            <time>00:01:00.000</time>
        </Timer>
        <Timer isActive="yes" isFolder="no" isTempTimer="no" isOffsetTimer="no">
            <name>Heartbeat</name>
            <script>disableTimer(&quot;Heartbeat&quot;)
echo(&quot;RECON&quot;)
reConn()
enableTimer(&quot;Heartbeat&quot;)</script>
            <command></command>
            <packageName></packageName>
            <time>00:10:00.000</time>
        </Timer>
        <Timer isActive="yes" isFolder="no" isTempTimer="no" isOffsetTimer="no">
            <name>AtTheTone</name>
            <script>disableTimer(&quot;AtTheTone&quot;)
cecho(&quot;                    &lt;:dark_olive_green&gt;========= &quot;..getTime(true)..&quot; =========\n&quot;)
enableTimer(&quot;AtTheTone&quot;)</script>
            <command></command>
            <packageName></packageName>
            <time>00:03:00.000</time>
        </Timer>
        <Timer isActive="yes" isFolder="no" isTempTimer="no" isOffsetTimer="no">
            <name>expCalc</name>
            <script>local expPerHour = totExp * 12
disableTimer(&quot;expCalc&quot;)
cecho(&quot;                    &lt;:SteelBlue&gt;========= Exp per Hour: &quot;..expPerHour..&quot; =========\n&quot;)
echo(&quot;EXPpHR&quot;,expPerHour..&quot; Exp/hr&quot;)
enableTimer(&quot;expCalc&quot;)
totExp = 0</script>
            <command></command>
            <packageName></packageName>
            <time>00:05:00.000</time>
        </Timer>
    </TimerPackage>
    <AliasPackage>
        <AliasGroup isActive="yes" isFolder="yes">
            <name>MajorMud</name>
            <script></script>
            <command></command>
            <packageName></packageName>
            <regex></regex>
            <Alias isActive="yes" isFolder="no">
                <name>Stats</name>
                <script>send(&quot;st;exp;wealth;spells&quot;)</script>
                <command></command>
                <packageName></packageName>
                <regex>^stats$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>Enable Trigger</name>
                <script>trigName = matches[2]
enableTrigger(trigName)</script>
                <command></command>
                <packageName></packageName>
                <regex>^enable trigger (.*)$</regex>
            </Alias>
            <AliasGroup isActive="yes" isFolder="yes">
                <name>Towns</name>
                <script></script>
                <command></command>
                <packageName></packageName>
                <regex></regex>
                <Alias isActive="yes" isFolder="no">
                    <name>Prep For Town Arena</name>
                    <script>if current_room == nil then echo(&quot;I don't know where I am.\n&quot;) return end

if prepedFor ~= nil then unPrep() end

prepedFor = matches[2]
tablePreps[matches[2]]()
echo(&quot;Prepared for &quot;..matches[2]..&quot;\n&quot;)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^prep (.*)$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>Auto Enter Arena</name>
                    <script>if current_room == nil then echo(&quot;I don't know where I am.\n&quot;) return end

--disable any existing auto enters
autoEnterTrigger = nil
for key,value in pairs(tableAutoEnter) do
	disableTrigger(value)
end

--enable correct auto enter
enableTrigger(tableAutoEnter[matches[2]])
prepedFor = matches[2]
</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^auto enter (.*)$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>Disable Auto Enter</name>
                    <script>echo(tostring(autoEnterTrigger)..&quot; disabled&quot;)
disableTrigger(autoEnterTrigger)
autoEnterTrigger = nil
</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^disable auto enter$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>UnPrep for Town Area</name>
                    <script>if autoEnterTrigger ~= nil then
	echo(tostring(autoEnterTrigger)..&quot; disabled\n&quot;)
	disableTrigger(autoEnterTrigger)
	autoEnterTrigger = nil
else
	echo(&quot;Auto enter already disabled\n&quot;)
end

if prepedFor ~= nil then
	unPrep()
else
	echo(&quot;Already unpreped\n&quot;)
end</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^unprep$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>Disable Loop</name>
                    <script>walkLoop_run = false</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^disable\sloop$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>Disable Direction Retreats</name>
                    <script>retreatSequence = nil
</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^disable retreats$</regex>
                </Alias>
            </AliasGroup>
            <AliasGroup isActive="yes" isFolder="yes">
                <name>mapper</name>
                <script></script>
                <command></command>
                <packageName></packageName>
                <regex></regex>
                <Alias isActive="yes" isFolder="no">
                    <name>Moved</name>
                    <script>last_movement = matches[2]

if manual_map then
	enteredRoom(&quot;&quot;,nil)
else
	send(matches[2])
end</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^(n|s|e|w|ne|nw|se|sw|u|d)$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>Map Utilities</name>
                    <script>mapControl(matches[2])</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^map\s(.*)$</regex>
                </Alias>
            </AliasGroup>
            <Alias isActive="yes" isFolder="no">
                <name>Panic HangUp</name>
                <script>echo(&quot;Panic hangup changed from &quot;..tostring(HP_panicHangup)..&quot; to &quot;..matches[2]..&quot;\n&quot;)
HP_panicHangup = matches[2]
</script>
                <command></command>
                <packageName></packageName>
                <regex>^panic\shangup\s(.*)$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>Disable Trigger</name>
                <script>disableTrigger(matches[2])</script>
                <command></command>
                <packageName></packageName>
                <regex>^disable trigger (.*)$</regex>
            </Alias>
        </AliasGroup>
    </AliasPackage>
    <ActionPackage/>
    <ScriptPackage>
        <ScriptGroup isActive="yes" isFolder="yes">
            <name>MajorMud</name>
            <packageName></packageName>
            <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
            <eventHandlerList/>
            <Script isActive="yes" isFolder="no">
                <name>MM</name>
                <packageName></packageName>
                <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

maxHP = 0

registerAnonymousEventHandler(&quot;sysLoadEvent&quot;, &quot;Startup&quot;)

function Startup()
	UIStartup()
	mapStartup()
	setTownGlobals()

	enableTrigger(&quot;check health&quot;)

	prevExp = 0
	totExp = 0
end

function health(hp, direction)
	if tonumber(hp) &lt;= HP_panic or tonumber(hp) &lt; 10 then
		walkLoop_run = false
		if HP_panicHangup then
			disconnect()
			disableTimmer(&quot;Heartbeat&quot;)
		else
			doRetreat()
			enableTrigger(&quot;panic&quot;)
		end
		bg (&quot;red&quot;)
		echo (&quot;PANIC!&quot;)
		bg (&quot;black&quot;)
	end

	if tonumber(hp) &lt; HP_retreat and tonumber(hp) &gt; HP_panic then
		echo(&quot;RETREAT!&quot;)
		walkLoop_pause = true
		doRetreat()
		send(&quot;rest&quot;)
		enableTrigger(&quot;healing&quot;)
		if autoEnterTrigger ~= nil then
			bg(&quot;DarkGreen&quot;)
			echo(&quot;Enabling &quot;..tostring(autoEnterTrigger))
			bg(&quot;black&quot;)
			enableTrigger(autoEnterTrigger)
		end
	end
	
	if CombatTimer then
		echo(&quot;Combat Timer expired\n&quot;) 
		HuntHold() 
	end

	if tonumber(hp) &gt; maxHP then maxHP = tonumber(hp) end
	HP = tonumber(hp)
	setGauge(&quot;HP&quot;, hp, maxHP, &quot;HP: &quot;..HP..&quot;/&quot;..maxHP)
	disableTimer(&quot;Heartbeat&quot;)
	enableTimer(&quot;Heartbeat&quot;)
end

function doRetreat()
	if retreatSequence == &quot;i&quot; then 
		send(inverseDirection(last_movement)) 
		changeRoom(inverseDirection(last_movement))
	elseif retreatSequence ~= nil then
		send(retreatSequence)
		local retreats = split(retreatSequence,&quot;;&quot;)
		for k,v in pairs(retreats) do
			changeRoom(v)
		end  
	end
	retreatSequence = &quot;i&quot;
	disableTrigger(&quot;check health&quot;)
end

walkLoop_run = false --keep stepping through loop
walkLoop_pause = false --temporarily stop running steps
walkLoop_count = 1 --current step

function walkLoop(loop)
	if not walkLoop_pause and HP &gt; HP_autoEnter then 
		send(loop[walkLoop_count]) 
		last_movement = loop[walkLoop_count]
		walkLoop_count = walkLoop_count + 1
		if walkLoop_count &gt; table.size(loop) then walkLoop_count =  1 end
	end
 
	if walkLoop_run then
		changeRoom(last_movement)
		disableTrigger(&quot;Name_Line&quot;)
		tempTimer(4,function() walkLoop(loop) end)
	else
		enableTrigger(&quot;Name_Line&quot;)
	end
end</script>
                <eventHandlerList/>
            </Script>
            <ScriptGroup isActive="yes" isFolder="yes">
                <name>Towns</name>
                <packageName></packageName>
                <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
                <eventHandlerList/>
                <Script isActive="yes" isFolder="no">
                    <name>Routines</name>
                    <packageName></packageName>
                    <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

function enterNewHavenArena()
	HP_panicHangup = false
	enterCommon()
	disableTrigger(&quot;auto enter newhaven&quot;)
	last_movement = &quot;d&quot;
	send(last_movement)
	changeRoom(last_movement)
end

function enterBearCavern()
	HP_panicHangup = false
	enterCommon()
	retreatSequence = &quot;s;s;u&quot;
	send(&quot;d;n;n&quot;)
	changeRoom(&quot;d&quot;)
	changeRoom(&quot;n&quot;)
	changeRoom(&quot;n&quot;)
	ignoreTimer = true
end

function strollSlums()
	HP_panicHangup = true
	enterCommon()
	echo(&quot;hunting enabled\n&quot;)
end

function disableSlums()
	disableTrigger(&quot;SlumHold&quot;)
	disableTrigger(&quot;SlumHunting&quot;)
end

function enterCommon()
	disableTrigger(&quot;huntHold&quot;)
	enableTrigger(prepedFor..&quot;Hunt&quot;)
	echo(&quot;hunting enabled\n&quot;)
	disableTrigger(&quot;healing&quot;)
	enableTrigger(&quot;check health&quot;)
	echo(&quot;health enabled\n&quot;)
	retreatSequence = &quot;i&quot;
	echo(&quot;retreat enabled\n&quot;)
end

function unPrep()
	disableTrigger(prepedFor..&quot;Hunt&quot;)
	disableTrigger(&quot;huntHold&quot;)
	echo(prepedFor..&quot; unpreped\n&quot;)
	prepedFor = nil
	retreatSequence = &quot;i&quot;
	disableTimer(&quot;Combat&quot;)
	CombatTimer = false
	ignoreTimer = false
end

function HuntHold()
	CombatTimer = false
	disableTimer(&quot;Combat&quot;)
	disableTrigger(&quot;huntHold&quot;)
	enableTrigger(prepedFor..&quot;Hunt&quot;)
	enableTrigger(&quot;Name_Line&quot;)
	walkLoop_pause = false
	hideWindow(&quot;DAMAGE&quot;)
end

function Hunt(monster)
	walkLoop_pause = true
	disableTrigger(&quot;Name_Line&quot;)
	disableTrigger(&quot;Exit_Line&quot;)
	disableTrigger(prepedFor..&quot;Hunt&quot;)
	enableTrigger(&quot;huntHold&quot;)
	send(&quot;attack &quot; .. monster)
	CombatTimer = false
	if not ignoreTimer then enableTimer(&quot;Combat&quot;) end
	showWindow(&quot;DAMAGE&quot;)
	damage = 0
	echo(&quot;DAMAGE&quot;,&quot;DAMAGE: &quot;..damage)
end</script>
                    <eventHandlerList/>
                </Script>
                <Script isActive="yes" isFolder="no">
                    <name>Variables</name>
                    <packageName></packageName>
                    <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

function setTownGlobals()
	CombatTimer = false
	ignoreTimer = false
	autoEnterTrigger = nil
	prepedFor = nil
	retreatSequence = &quot;i&quot;

	tablePreps = {
		[&quot;newhaven&quot;] = function (x) enterNewHavenArena() end,
		[&quot;slums&quot;] = function (x) strollSlums() end,
		[&quot;bear&quot;] = function (x) enterBearCavern() end,
	}

	tableAutoEnter = {
		[&quot;newhaven&quot;] = &quot;auto enter newhaven&quot;,
		[&quot;slums&quot;] = &quot;auto Stroll Slums&quot;,
	}

	slumsLoop = { &quot;s&quot;,&quot;s&quot;,&quot;e&quot;,&quot;e&quot;,&quot;e&quot;,&quot;e&quot;,&quot;n&quot;,&quot;n&quot;,&quot;w&quot;,&quot;w&quot;,&quot;w&quot;,&quot;w&quot; }
end</script>
                    <eventHandlerList/>
                </Script>
            </ScriptGroup>
            <ScriptGroup isActive="yes" isFolder="yes">
                <name>character_varibs</name>
                <packageName></packageName>
                <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
                <eventHandlerList/>
                <Script isActive="no" isFolder="no">
                    <name>cleric</name>
                    <packageName></packageName>
                    <script>-------------------------------------------------
-- Definition of cleric specific variables.    --
-------------------------------------------------

--When should panic set in?
HP_panic = 15
--Should I hang up of panic?
HP_panicHangup = true
--When should I retreat from room?
HP_retreat = 25
--When should I start using health spells?
HP_healthSpell = 25
--Which health spells are available?
HP_maheAvail = &quot;c mihe&quot;
HP_miheAvail = nil
--When can I automatically re-enter battle?
HP_autoEnter = 35

uname = &quot;etherealsilence&quot;</script>
                    <eventHandlerList/>
                </Script>
                <Script isActive="no" isFolder="no">
                    <name>paladin</name>
                    <packageName></packageName>
                    <script>-------------------------------------------------
-- Definition of paladin specific variables.   --
-------------------------------------------------

--When should panic set in?
HP_panic = 15
--Should I hang up of panic?
HP_panicHangup = true
--When should I retreat from room?
HP_retreat = 25
--When should I start using health spells?
HP_healthSpell = 20
--Which health spells are available?
HP_maheAvail = &quot;c mihe&quot;
HP_miheAvail = nil
--When can I automatically re-enter battle?
HP_autoEnter = 35

uname = &quot;pileoworthless&quot;</script>
                    <eventHandlerList/>
                </Script>
                <Script isActive="yes" isFolder="no">
                    <name>Ranger</name>
                    <packageName></packageName>
                    <script>-------------------------------------------------
-- Definition of paladin specific variables.   --
-------------------------------------------------

--When should panic set in?
HP_panic = 15
--Should I hang up of panic?
HP_panicHangup = true
--When should I retreat from room?
HP_retreat = 25
--When should I start using health spells?
HP_healthSpell = 20
--Which health spells are available?
HP_maheAvail = &quot;c mend&quot;
HP_miheAvail = nil
--When can I automatically re-enter battle?
HP_autoEnter = 40

uname = &quot;captain&quot;</script>
                    <eventHandlerList/>
                </Script>
                <Script isActive="no" isFolder="no">
                    <name>Mystic</name>
                    <packageName></packageName>
                    <script>-------------------------------------------------
-- Definition of mystci specific variables.   --
-------------------------------------------------

--When should panic set in?
HP_panic = 15
--Should I hang up of panic?
HP_panicHangup = true
--When should I retreat from room?
HP_retreat = 25
--When should I start using health spells?
HP_healthSpell = 20
--Which health spells are available?
HP_maheAvail = &quot;invoke swan&quot;
HP_miheAvail = nil
--When can I automatically re-enter battle?
HP_autoEnter = 38

uname = &quot;unhappy&quot;</script>
                    <eventHandlerList/>
                </Script>
                <Script isActive="yes" isFolder="no">
                    <name>Recon</name>
                    <packageName></packageName>
                    <script>function reConn()
	reconnect()
	tempTimer(4,[[send(&quot;]]..uname..[[&quot;)]])
	tempTimer(4.5,[[send(&quot;&quot;)]])
	tempTimer(6,[[send(&quot;c&quot;)]])
	tempTimer(6.5,[[send(&quot;m&quot;)]])
	tempTimer(7,[[send(&quot;e&quot;)]])
	tempTimer(7.2,[[send(&quot;c&quot;)]])
end</script>
                    <eventHandlerList/>
                </Script>
            </ScriptGroup>
            <Script isActive="yes" isFolder="no">
                <name>UI</name>
                <packageName></packageName>
                <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

function UIStartup()
	WindowWidth, WindowHeight = getMainWindowSize();
	createConsole(&quot;chat&quot;, 9, 57, 20, WindowWidth-415,0)
	createGauge(&quot;HP&quot;, 100, 25, WindowWidth-520, 0, &quot;HEALTH&quot;, &quot;dark_green&quot;)
	createGauge(&quot;EXP&quot;, 100, 25, WindowWidth-520, 25, &quot;EXP&quot;, &quot;PaleTurquoise&quot;)
	createLabel(&quot;EXPpHR&quot;, WindowWidth-520, 50, 100, 25, 1)
	setBackgroundColor(&quot;EXPpHR&quot;, 218, 165, 32, 255)
	createLabel(&quot;DAMAGE&quot;, WindowWidth-520, 75, 100, 25, 1)
	setBackgroundColor(&quot;DAMAGE&quot;,254,186,173,255)
	hideWindow(&quot;DAMAGE&quot;)

	HBox = Geyser.HBox:new({name=&quot;HBox&quot;, x=WindowWidth-415, y=WindowHeight-400, width=400, height=400,})
	local mapper = Geyser.Mapper:new({name = &quot;mapper&quot;},HBox)
end

function resizeEvent( event, x, y )
	WindowWidth, WindowHeight = getMainWindowSize();
	-- move chat window
	moveWindow(&quot;chat&quot;,WindowWidth-415,0)
	if WindowHeight-400 &lt; 300 then resizeWindow(&quot;chat&quot;,400,WindowHeight-400) else resizeWindow(&quot;chat&quot;,400,300) end
	
	moveWindow(&quot;HP&quot;,WindowWidth-520,0)
	moveWindow(&quot;EXP&quot;,WindowWidth-520,25)
	moveWindow(&quot;EXPpHR&quot;,WindowWidth-520,50)
	moveWindow(&quot;DAMAGE&quot;,WindowWidth-520,75)

	HBox:move(WindowWidth-415,WindowHeight-400)
end

registerAnonymousEventHandler(&quot;sysWindowResizeEvent&quot;, &quot;resizeEvent&quot;)</script>
                <eventHandlerList/>
            </Script>
            <Script isActive="yes" isFolder="no">
                <name>mapping</name>
                <packageName></packageName>
                <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

mudlet = mudlet or {}; mudlet.mapper_script = true

registerAnonymousEventHandler(&quot;setPlayerLoc&quot;, &quot;setPlayerLocation&quot;)

function mapStartup()
	last_movement = nil
	current_room = nil
	manual_map = false
	auto_map = false

	loadMap()
	addMapEvent(&quot;I'm Here&quot;, &quot;setPlayerLoc&quot;)
	echo(&quot;Default map loaded\n&quot;)
end

function setPlayerLocation(evet, list, rm)
	setRoom(rm)
	last_movement = nil
	enableTrigger(&quot;Name_Line&quot;)
	disableTrigger(&quot;Exit_Line&quot;)
end

function doSpeedWalk()
	auto_map = false
	disableTrigger(&quot;Name_Line&quot;)
	echo(&quot;Path we need to take: &quot; .. table.concat(speedWalkDir, &quot;, &quot;) .. &quot;\n&quot;)
	echo(&quot;Rooms we'll pass through: &quot; .. table.concat(speedWalkPath, &quot;, &quot;) .. &quot;\n&quot;)
	for i,v in ipairs(speedWalkDir) do
		tempTimer(i, [[send(&quot;]]..v..[[&quot;)]])
	end
	tempTimer(table.size(speedWalkPath) + 2, [[enableTrigger(&quot;Name_Line&quot;)]])
	setRoom(speedWalkPath[table.size(speedWalkPath)])
end

function enteredRoom(room_name,area_name)
	if current_room == nil then
		local room_list = searchRoom(room_name)
		if table.size(room_list) == 1 then
			for rid,rname in pairs(room_list) do setLocation(rid) end
		else
			echo(&quot;I don't know where I am\n&quot;)
		end
	else
		exits = getRoomExits(current_room)
		if table.contains(exits,longDirection(last_movement)) then
			local rid = exits[longDirection(last_movement)]
			setRoom(rid)
			if getRoomName(rid) == &quot;&quot; then setRoomName(rid,room_name) end
		else 
			if auto_map or manual_map then
				createRoom(room_name,area_name)
			else
				echo(&quot; - Room not found\n&quot;)
			end
		end
	end
end

function createRoom(room_name,area_name)
	if area_name == nil then
		if current_room == nil then
			echo(&quot;can't find an area for the room\n&quot;)
			return
		else
			area_name = getRoomAreaName(getRoomArea(current_room))
		end
	else
		addAreaName(area_name)
		current_room = nil
	end

	pos_table = getRoomsByPosition(findAreaID(area_name),targetPosition())
	if table.size(pos_table) ~= 0 then
		rid = pos_table[0]
		setExit(rid,current_room,inverseDirection(last_movement))
		setExit(current_room,rid,last_movement)
		setRoom(rid)
		return
	end

	rid = createRoomID()
	addRoom(rid)
	setRoomName(rid,room_name)
	setRoomArea(rid,findAreaID(area_name))
	setRoomCoordinates(rid,targetPosition())

	if current_room ~= nil then
		setExit(rid,current_room,inverseDirection(last_movement))
		setExit(current_room,rid,last_movement)
	end

	setRoom(rid)
	echo(&quot;Room &quot;..room_name..&quot; (&quot;..rid..&quot;) created\n&quot;)
end

function changeRoom(direction)
	exits = getRoomExits(current_room)
	if table.contains(exits,longDirection(direction)) then
		local rid = exits[longDirection(direction)]
		setRoom(rid)
	else
		echo(&quot;No exit to the &quot;..longDirection(direction)..&quot;\n&quot;)
	end
end

function setRoom(room_id)
	current_room = room_id
	centerview(room_id)
end

function describeRoom(room_id)
	echo(&quot;Room &quot;..room_id..&quot; - &quot;..getRoomName(room_id)..&quot; in area &quot;..getRoomAreaName(getRoomArea(room_id))..&quot;\n&quot;)
end

function findRoom(room_name)
	local room_list = searchRoom(room_name)
	if table.size(room_list) == 1 then
		for rid,rname in pairs(room_list) do describeRoom(rid) end
	else
		echo(&quot;Room not found\n&quot;)
	end
end

function mapControl(inst)
	if inst == &quot;save&quot; then saveMap() echo(&quot;default map saved\n&quot;)
	elseif inst == &quot;load&quot; then loadMap() updateMap() echo(&quot;default map loaded\n&quot;)
	elseif inst:find(&quot;delete&quot;) ~= nil then
		if inst:find(&quot;all&quot;) ~= nil then
			local list = getAreaTable()
			for area, id in pairs(list) do
				deleteArea(id)
			end
			current_room = nil
			last_movement = nil
			echo(&quot;all map areas deleted\n&quot;)
		elseif inst:find(&quot;area&quot;) then
			aname = inst:sub(13,inst:len())
			aid = findAreaID(aname)
			if aid ~= nil then
				deleteArea(aid)
				echo(&quot;area &quot;..aname..&quot; deleted\n&quot;)
			else
				echo(&quot;area &quot;..aname..&quot; does not exist\n&quot;)
			end
		elseif inst:find(&quot;room&quot;) then
			rid = inst:sub(13,inst:len())
			if roomExists(rid) then
				deleteRoom(rid)
				echo(&quot;room &quot;..rid..&quot; deleted\n&quot;)
			else
				echo(&quot;room &quot;..rid..&quot; does not exist\n&quot;)
			end
		end
	elseif inst:find(&quot;create&quot;) ~= nil then
		if inst:find(&quot;area&quot;) ~= nil then
			aname = inst:sub(13,inst:len())
			createRoom(&quot;&quot;,aname)
			echo(&quot;area &quot;..aname..&quot; created\n&quot;)
		end
	elseif inst:find(&quot;describe&quot;) ~= nil then
		if inst:find(&quot;room&quot;) ~= nil then
			rid = inst:sub(15,inst:len())
			if roomExists(rid) then describeRoom(rid)
			else echo(&quot;room &quot;..rid..&quot; does not exist\n&quot;) end
		end
	elseif inst:find(&quot;rename&quot;) ~= nil then
		if inst:find(&quot;room&quot;) ~= nil then
			rname = inst:sub(13,inst:len())
			if current_room ~= nil then setRoomName(current_room,rname) describeRoom(current_room)
			else echo(&quot;I don't know where I am.\n&quot;) end
		end
	elseif inst:find(&quot;find&quot;) ~= nil then
		if inst:find(&quot;room&quot;) ~= nil then findRoom(inst:sub(11,inst:len())) end
	elseif inst:find(&quot;where am i&quot;) then
		if current_room ~= nil then describeRoom(current_room)
		else echo(&quot;I don't know where I am.\n&quot;) end
	elseif inst:find(&quot;goto&quot;) ~= nil then goto(inst:sub(6,inst:len()))
	elseif inst == &quot;manual on&quot; then manual_map = true auto_map = false echo(&quot;manual mapping enabled\n&quot;)
	elseif inst == &quot;manual off&quot; then manual_map = false echo(&quot;manual mapping disabled\n&quot;)
	elseif inst == &quot;auto on&quot; then auto_map = true manual_map = false echo(&quot;auto mapping enabled\n&quot;)
	elseif inst == &quot;auto off&quot; then auto_map = false echo(&quot;auto mapping disabled\n&quot;)
	else echo(&quot;Map command not found\n&quot;)
	end
end

function inverseDirection(direction)
	if direction == &quot;n&quot; then return &quot;s&quot;
	elseif direction == &quot;s&quot; then return &quot;n&quot;
	elseif direction == &quot;e&quot; then return &quot;w&quot;
	elseif direction == &quot;w&quot; then return &quot;e&quot;
	elseif direction == &quot;ne&quot; then return &quot;sw&quot;
	elseif direction == &quot;nw&quot; then return &quot;se&quot;
	elseif direction == &quot;se&quot; then return &quot;nw&quot;
	elseif direction == &quot;sw&quot; then return &quot;ne&quot;
	elseif direction == &quot;u&quot; then return &quot;d&quot;
	elseif direction == &quot;d&quot; then return &quot;u&quot;
	end
end

function longDirection(direction)
	if direction == &quot;n&quot; then return &quot;north&quot;
	elseif direction == &quot;s&quot; then return &quot;south&quot;
	elseif direction == &quot;e&quot; then return &quot;east&quot;
	elseif direction == &quot;w&quot; then return &quot;west&quot;
	elseif direction == &quot;ne&quot; then return &quot;northeast&quot;
	elseif direction == &quot;nw&quot; then return &quot;northwest&quot;
	elseif direction == &quot;se&quot; then return &quot;southeast&quot;
	elseif direction == &quot;sw&quot; then return &quot;southwest&quot;
	elseif direction == &quot;u&quot; then return &quot;up&quot;
	elseif direction == &quot;d&quot; then return &quot;down&quot;
	end
end

function targetPosition()
	if current_room == nil then
		return 0,0,0
	else
		x,y,z = getRoomCoordinates(current_room)

		if last_movement:find(&quot;n&quot;) ~= nil then y = y + 2 end
		if last_movement:find(&quot;s&quot;) ~= nil then y = y - 2 end
		if last_movement:find(&quot;e&quot;) ~= nil then x = x + 2 end
		if last_movement:find(&quot;w&quot;) ~= nil then x = x - 2 end
		if last_movement:find(&quot;u&quot;) ~= nil then z = z + 2
		elseif last_movement:find(&quot;d&quot;) ~= nil then z = z - 2
		end

		return x,y,z
	end
end

function findAreaID(areaname)
  local list = getAreaTable()
 
  -- iterate over the list of areas, matching them with substring match. 
  -- if we get match a single area, then return it's ID, otherwise return
  -- 'false' and a message that there are than one are matches
  local returnid, fullareaname
  for area, id in pairs(list) do
    if area:find(areaname, 1, true) then
      if returnid then return false, &quot;more than one area matches&quot; end
      returnid = id; fullareaname = area
    end
  end
 
  return returnid, fullareaname
end

function split(str,c)
	local aCount = 0
	local array = {}
	local a = string.find(str, c)

	while a do
		array[aCount] = string.sub(str, 1, a - 1)

		aCount = aCount + 1
		array[aCount] = string.sub(str, a + 1, string.len(str))
		a = string.find(array[aCount], c)
		str = array[aCount]
	end
	return array
end</script>
                <eventHandlerList/>
            </Script>
        </ScriptGroup>
    </ScriptPackage>
    <KeyPackage>
        <Key isActive="yes" isFolder="no">
            <name>Disconnect</name>
            <packageName></packageName>
            <script>disconnect()</script>
            <command></command>
            <keyCode>16777264</keyCode>
            <keyModifier>0</keyModifier>
        </Key>
        <Key isActive="yes" isFolder="no">
            <name>Recon</name>
            <packageName></packageName>
            <script>reConn()</script>
            <command></command>
            <keyCode>16777275</keyCode>
            <keyModifier>0</keyModifier>
        </Key>
        <Key isActive="yes" isFolder="no">
            <name>Gossip</name>
            <packageName></packageName>
            <script>printCmdLine(&quot;gos &quot;)</script>
            <command></command>
            <keyCode>39</keyCode>
            <keyModifier>0</keyModifier>
        </Key>
    </KeyPackage>
</MudletPackage>
