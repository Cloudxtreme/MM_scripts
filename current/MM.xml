<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE MudletPackage>
<MudletPackage version="1.0">
    <TriggerPackage>
        <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
            <name>MajorMud</name>
            <script></script>
            <triggerType>0</triggerType>
            <conditonLineDelta>0</conditonLineDelta>
            <mStayOpen>0</mStayOpen>
            <mCommand></mCommand>
            <packageName></packageName>
            <mFgColor>#ff0000</mFgColor>
            <mBgColor>#ffff00</mBgColor>
            <mSoundFile></mSoundFile>
            <colorTriggerFgColor>#000000</colorTriggerFgColor>
            <colorTriggerBgColor>#000000</colorTriggerBgColor>
            <regexCodeList/>
            <regexCodePropertyList/>
            <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                <name>Get Gold</name>
                <script>send(&quot;g silver;g copper;g gold;rest;exp&quot;)</script>
                <triggerType>0</triggerType>
                <conditonLineDelta>0</conditonLineDelta>
                <mStayOpen>0</mStayOpen>
                <mCommand></mCommand>
                <packageName></packageName>
                <mFgColor>#ff0000</mFgColor>
                <mBgColor>#ffff00</mBgColor>
                <mSoundFile></mSoundFile>
                <colorTriggerFgColor>#000000</colorTriggerFgColor>
                <colorTriggerBgColor>#000000</colorTriggerBgColor>
                <regexCodeList>
                    <string>You gain</string>
                </regexCodeList>
                <regexCodePropertyList>
                    <integer>0</integer>
                </regexCodePropertyList>
            </Trigger>
            <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                <name>HP</name>
                <script></script>
                <triggerType>0</triggerType>
                <conditonLineDelta>0</conditonLineDelta>
                <mStayOpen>0</mStayOpen>
                <mCommand></mCommand>
                <packageName></packageName>
                <mFgColor>#ff0000</mFgColor>
                <mBgColor>#ffff00</mBgColor>
                <mSoundFile></mSoundFile>
                <colorTriggerFgColor>#000000</colorTriggerFgColor>
                <colorTriggerBgColor>#000000</colorTriggerBgColor>
                <regexCodeList>
                    <string>HP=</string>
                </regexCodeList>
                <regexCodePropertyList>
                    <integer>0</integer>
                </regexCodePropertyList>
                <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>Escape Directions</name>
                    <script></script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList/>
                    <regexCodePropertyList/>
                    <Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>escape up</name>
                        <script>disableTrigger(&quot;check health&quot;)
health(matches[2], &quot;u&quot;)
</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>^\[HP=(\d+)</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                        </regexCodePropertyList>
                    </Trigger>
                    <Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>escape east</name>
                        <script>disableTrigger(&quot;check health&quot;)
health(matches[2], &quot;e&quot;)</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>^\[HP=(\d+)</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                        </regexCodePropertyList>
                    </Trigger>
                </TriggerGroup>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>check health</name>
                    <script>health(matches[2])</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^\[HP=(\d+)</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>panic</name>
                    <script>if tonumber(matches[2]) &gt; healthPanic then
	disableTrigger(&quot;panic&quot;)
	enableTrigger(&quot;check health&quot;)

	if autoEnterTrigger ~= nil then
		bg(&quot;DarkGreen&quot;)
		echo(&quot;enabling &quot;..tostring(autoEnterTrigger))
		bg(&quot;black&quot;)
		enableTrigger(autoEnterTrigger)
	end
end</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffaa00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^\[HP=(\d+)</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
            </TriggerGroup>
            <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                <name>Towns</name>
                <script></script>
                <triggerType>0</triggerType>
                <conditonLineDelta>0</conditonLineDelta>
                <mStayOpen>0</mStayOpen>
                <mCommand></mCommand>
                <packageName></packageName>
                <mFgColor>#ff0000</mFgColor>
                <mBgColor>#ffff00</mBgColor>
                <mSoundFile></mSoundFile>
                <colorTriggerFgColor>#000000</colorTriggerFgColor>
                <colorTriggerBgColor>#000000</colorTriggerBgColor>
                <regexCodeList/>
                <regexCodePropertyList/>
                <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>New Haven</name>
                    <script></script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#55ff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>room</string>
                        <string>Combat Off</string>
                        <string>you</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>0</integer>
                        <integer>0</integer>
                        <integer>0</integer>
                    </regexCodePropertyList>
                    <Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>hunting</name>
                        <script>target = matches[1]
send(&quot;attack &quot; .. target)
enableTrigger(&quot;huntingHold&quot;)
disableTrigger(&quot;hunting&quot;)</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>slime</string>
                            <string>filthbug</string>
                            <string>kobold</string>
                            <string>lashworm</string>
                            <string>carrion</string>
                            <string>giant rat</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>0</integer>
                            <integer>0</integer>
                            <integer>0</integer>
                            <integer>0</integer>
                            <integer>0</integer>
                            <integer>0</integer>
                        </regexCodePropertyList>
                    </Trigger>
                    <Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>huntingHold</name>
                        <script>enableTrigger(&quot;hunting&quot;)
disableTrigger(&quot;huntingHold&quot;)</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>Combat Off</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>0</integer>
                        </regexCodePropertyList>
                    </Trigger>
                </TriggerGroup>
                <Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>auto enter NewHaven</name>
                    <script>if tonumber(matches[2]) &gt;= autoEnterHP then
	autoEnterTrigger = &quot;auto enter NewHaven&quot;
	tablePreps[&quot;newhaven&quot;]()
end
	</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^\[HP=(\d+)</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
            </TriggerGroup>
            <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                <name>Chat</name>
                <script>selectCurrentLine()
copy()
appendBuffer(&quot;chat&quot;)</script>
                <triggerType>0</triggerType>
                <conditonLineDelta>0</conditonLineDelta>
                <mStayOpen>0</mStayOpen>
                <mCommand></mCommand>
                <packageName></packageName>
                <mFgColor>#ff0000</mFgColor>
                <mBgColor>#ffff00</mBgColor>
                <mSoundFile></mSoundFile>
                <colorTriggerFgColor>#000000</colorTriggerFgColor>
                <colorTriggerBgColor>#000000</colorTriggerBgColor>
                <regexCodeList>
                    <string>say</string>
                    <string>gossip</string>
                    <string>whisper</string>
                </regexCodeList>
                <regexCodePropertyList>
                    <integer>0</integer>
                    <integer>0</integer>
                    <integer>0</integer>
                </regexCodePropertyList>
            </Trigger>
            <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                <name>AutoMap</name>
                <script></script>
                <triggerType>0</triggerType>
                <conditonLineDelta>0</conditonLineDelta>
                <mStayOpen>0</mStayOpen>
                <mCommand></mCommand>
                <packageName></packageName>
                <mFgColor>#ff0000</mFgColor>
                <mBgColor>#ffff00</mBgColor>
                <mSoundFile></mSoundFile>
                <colorTriggerFgColor>#000000</colorTriggerFgColor>
                <colorTriggerBgColor>#000000</colorTriggerBgColor>
                <regexCodeList/>
                <regexCodePropertyList/>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="yes" isColorTriggerFg="yes" isColorTriggerBg="yes">
                    <name>Name_Line</name>
                    <script>disableTrigger(&quot;Name_Line&quot;)
enableTrigger(&quot;Exit_Line&quot;)
loc = split(matches[1],&quot;,&quot;)
land = string.trim(loc[0])
room = string.trim(loc[1])

if manual_map then return end

if table.size(loc) == 0 then
	enteredRoom(matches[1],nil)
else
	enteredRoom(room,land)
end</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>FG14BG2</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>6</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>Exit_Line</name>
                    <script>disableTrigger(&quot;Exit_Line&quot;)
enableTrigger(&quot;Name_Line&quot;)</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^Obvious\sexits:\s(.*)</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
            </TriggerGroup>
        </TriggerGroup>
    </TriggerPackage>
    <TimerPackage/>
    <AliasPackage>
        <AliasGroup isActive="yes" isFolder="yes">
            <name>MajorMud</name>
            <script></script>
            <command></command>
            <packageName></packageName>
            <regex></regex>
            <Alias isActive="yes" isFolder="no">
                <name>Stats</name>
                <script>send(&quot;st;exp;wealth;spells&quot;)</script>
                <command></command>
                <packageName></packageName>
                <regex>^stats$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>Disable Direction Escapes</name>
                <script>disableEscapes()</script>
                <command></command>
                <packageName></packageName>
                <regex>^disable trigger escape$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>Enable Trigger</name>
                <script>trigName = matches[2]
enableTrigger(trigName)</script>
                <command></command>
                <packageName></packageName>
                <regex>^enable trigger (.*)$</regex>
            </Alias>
            <AliasGroup isActive="yes" isFolder="yes">
                <name>Towns</name>
                <script></script>
                <command></command>
                <packageName></packageName>
                <regex></regex>
                <Alias isActive="yes" isFolder="no">
                    <name>Prep For Town Arena</name>
                    <script>tablePreps[matches[2]]()</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^prep (.*)$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>Auto Enter Arena</name>
                    <script>--disable any existing auto enters
autoEnterTrigger = nil
for key,value in pairs(tableAutoEnter) do
	disableTrigger(value)
end

--enable correct auto enter
enableTrigger(tableAutoEnter[matches[2]])
</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^auto enter (.*)$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>Disable Auto Enter</name>
                    <script>echo(tostring(autoEnterTrigger)..&quot; disabled&quot;)
autoEnterTrigger = nil</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^disable auto enter$</regex>
                </Alias>
            </AliasGroup>
            <AliasGroup isActive="yes" isFolder="yes">
                <name>mapper</name>
                <script></script>
                <command></command>
                <packageName></packageName>
                <regex></regex>
                <Alias isActive="yes" isFolder="no">
                    <name>Moved</name>
                    <script>last_movement = matches[2]

if manual_map then
	enteredRoom(&quot;&quot;,nil)
else
	send(matches[2])
end</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^(n|s|e|w|ne|nw|se|sw|u|d)$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>Map Utilities</name>
                    <script>mapControl(matches[2])</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^map\s(.*)$</regex>
                </Alias>
            </AliasGroup>
        </AliasGroup>
    </AliasPackage>
    <ActionPackage/>
    <ScriptPackage>
        <ScriptGroup isActive="yes" isFolder="yes">
            <name>MajorMud</name>
            <packageName></packageName>
            <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
            <eventHandlerList/>
            <Script isActive="yes" isFolder="no">
                <name>MM</name>
                <packageName></packageName>
                <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

autoEnterTrigger = nil

function health(hp, direction)
	if tonumber(hp) &lt;= healthPanic then 
		if direction ~= nil then
			send(direction..&quot;;rest&quot;)
			disableEscapes()
			disableTrigger(&quot;check health&quot;)
			enableTrigger(&quot;panic&quot;)
		else
			--disconnect()
		end
		bg (&quot;red&quot;)
		echo (&quot;PANIC!&quot;)
		bg (&quot;black&quot;)
	end

	if direction ~= nil then --escape sequence enabled, battle instead of heal
		if tonumber(hp) &lt; healthMinorBottom and tonumber(hp) &gt; healthPanic then
			send(direction .. &quot;;rest&quot;)
			disableEscapes()
			if autoEnterTrigger ~= nil then
				bg(&quot;DarkGreen&quot;)
				echo(&quot;enabling &quot;..tostring(autoEnterTrigger))
				bg(&quot;black&quot;)
				enableTrigger(autoEnterTrigger)
			end
		end
	else
		if tonumber(hp) &lt;= healthMinorTop and tonumber(hp) &gt; healthMinorBottom then
			send(&quot;cast mihe;rest&quot;)
			disableTrigger(&quot;check health&quot;)
			tempTimer(7, [[enableTrigger(&quot;check health&quot;)]])
		end
	end
end

function disableEscapes()
	disableTrigger(&quot;escape up&quot;)
	enableTrigger(&quot;check health&quot;)
end</script>
                <eventHandlerList/>
            </Script>
            <ScriptGroup isActive="yes" isFolder="yes">
                <name>Towns</name>
                <packageName></packageName>
                <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
                <eventHandlerList/>
                <Script isActive="yes" isFolder="no">
                    <name>NewHaven</name>
                    <packageName></packageName>
                    <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

function enterNewHavenArena()
	disableTrigger(&quot;check health&quot;)
	echo(&quot;check health enabled\n&quot;)
	enableTrigger(&quot;escape up&quot;)
	echo(&quot;escape up enabled\n&quot;)
	disableTrigger(&quot;huntingHold&quot;)
	enableTrigger(&quot;hunting&quot;)
	echo(&quot;hunting enabled\n&quot;)
	disableTrigger(&quot;auto enter NewHaven&quot;)
	send(&quot;d&quot;)
end</script>
                    <eventHandlerList/>
                </Script>
                <Script isActive="yes" isFolder="no">
                    <name>Tables</name>
                    <packageName></packageName>
                    <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

tablePreps = {
	[&quot;newhaven&quot;] = function (x) enterNewHavenArena() end,
}

tableAutoEnter = {
	[&quot;newhaven&quot;] = &quot;auto enter NewHaven&quot;,
}</script>
                    <eventHandlerList/>
                </Script>
            </ScriptGroup>
            <ScriptGroup isActive="yes" isFolder="yes">
                <name>character_varibs</name>
                <packageName></packageName>
                <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
                <eventHandlerList/>
                <Script isActive="no" isFolder="no">
                    <name>cleric</name>
                    <packageName></packageName>
                    <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

healthPanic = 10
healthMinorTop = 30
healthMinorBottom = 20
autoEnterHP = 31</script>
                    <eventHandlerList/>
                </Script>
                <Script isActive="yes" isFolder="no">
                    <name>paladin</name>
                    <packageName></packageName>
                    <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

healthPanic = 10
healthMinorTop = 35
healthMinorBottom = 25
autoEnterHP = 35</script>
                    <eventHandlerList/>
                </Script>
            </ScriptGroup>
            <Script isActive="yes" isFolder="no">
                <name>UI</name>
                <packageName></packageName>
                <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------


WindowWidth, WindowHeight = getMainWindowSize();
createConsole(&quot;chat&quot;, 9, 50, 20, WindowWidth-365,0)

function resizeEvent( event, x, y )
	WindowWidth, WindowHeight = getMainWindowSize();
	-- move chat window
	moveWindow(&quot;chat&quot;,WindowWidth-365,0)
end

registerAnonymousEventHandler(&quot;sysWindowResizeEvent&quot;, &quot;resizeEvent&quot;)</script>
                <eventHandlerList/>
            </Script>
            <Script isActive="yes" isFolder="no">
                <name>mapping</name>
                <packageName></packageName>
                <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

mudlet = mudlet or {}; mudlet.mapper_script = true

last_movement = nil
current_room = nil
manual_map = false
auto_map = false

addMapEvent(&quot;I'm Here&quot;, &quot;setPlayerLoc&quot;)
registerAnonymousEventHandler(&quot;setPlayerLoc&quot;, &quot;setPlayerLocation&quot;)

function setPlayerLocation(evet, list, rm)
	setRoom(rm)
end

function doSpeedWalk()
	auto_map = false
	disableTrigger(&quot;Name_Line&quot;)
	echo(&quot;Path we need to take: &quot; .. table.concat(speedWalkDir, &quot;, &quot;) .. &quot;\n&quot;)
	echo(&quot;Rooms we'll pass through: &quot; .. table.concat(speedWalkPath, &quot;, &quot;) .. &quot;\n&quot;)
	for i,v in ipairs(speedWalkDir) do
		tempTimer(i, [[send(&quot;]]..v..[[&quot;)]])
	end
	setRoom(speedWalkPath[#speedWalkPath])
	tempTimer(#speedWalkPath + 2, [[enableTrigger(&quot;Name_Line&quot;)]])
end

function enteredRoom(room_name,area_name)
	if current_room == nil then
		local room_list = searchRoom(room_name)
		if table.size(room_list) == 1 then
			for rid,rname in pairs(room_list) do setLocation(rid) end
		else
			echo(&quot;I don't know where I am\n&quot;)
		end
	else
		exits = getRoomExits(current_room)
		if table.contains(exits,longDirection(last_movement)) then
			local rid = exits[longDirection(last_movement)]
			setLocation(rid)
			if getRoomName(rid) == &quot;&quot; then setRoomName(rid,room_name) end
		else 
			if auto_map or manual_map then
				createRoom(room_name,area_name)
			else
				echo(&quot; - Room not found\n&quot;)
			end
		end
	end
end

function createRoom(room_name,area_name)
	if area_name == nil then
		if current_room == nil then
			echo(&quot;can't find an area for the room\n&quot;)
			return
		else
			area_name = getRoomAreaName(getRoomArea(current_room))
		end
	else
		addAreaName(area_name)
		current_room = nil
	end

	pos_table = getRoomsByPosition(findAreaID(area_name),targetPosition())
	if table.size(pos_table) ~= 0 then
		rid = pos_table[0]
		setExit(rid,current_room,inverseDirection(last_movement))
		setExit(current_room,rid,last_movement)
		setRoom(rid)
		return
	end

	rid = createRoomID()
	addRoom(rid)
	setRoomName(rid,room_name)
	setRoomArea(rid,findAreaID(area_name))
	setRoomCoordinates(rid,targetPosition())

	if current_room ~= nil then
		setExit(rid,current_room,inverseDirection(last_movement))
		setExit(current_room,rid,last_movement)
	end

	setRoom(rid)
	echo(&quot;Room &quot;..room_name..&quot; (&quot;..rid..&quot;) created\n&quot;)
end

function setRoom(room_id)
	current_room = room_id
	centerview(room_id)
end

function describeRoom(room_id)
	echo(&quot;Room &quot;..room_id..&quot; - &quot;..getRoomName(room_id)..&quot; in area &quot;..getRoomAreaName(getRoomArea(room_id))..&quot;\n&quot;)
end

function mapControl(inst)
	if inst == &quot;save&quot; then saveMap() echo(&quot;default map saved\n&quot;)
	elseif inst == &quot;load&quot; then loadMap() updateMap() echo(&quot;default map loaded\n&quot;)
	elseif inst:find(&quot;delete&quot;) ~= nil then
		if inst:find(&quot;all&quot;) ~= nil then
			local list = getAreaTable()
			for area, id in pairs(list) do
				deleteArea(id)
			end
			current_room = nil
			last_movement = nil
			echo(&quot;all map areas deleted\n&quot;)
		elseif inst:find(&quot;area&quot;) then
			aname = inst:sub(13,inst:len())
			aid = findAreaID(aname)
			if aid ~= nil then
				deleteArea(aid)
				echo(&quot;area &quot;..aname..&quot; deleted\n&quot;)
			else
				echo(&quot;area &quot;..aname..&quot; does not exist\n&quot;)
			end
		elseif inst:find(&quot;room&quot;) then
			rid = inst:sub(13,inst:len())
			if roomExists(rid) then
				deleteRoom(rid)
				echo(&quot;room &quot;..rid..&quot; deleted\n&quot;)
			else
				echo(&quot;room &quot;..rid..&quot; does not exist\n&quot;)
			end
		end
	elseif inst:find(&quot;create&quot;) ~= nil then
		if inst:find(&quot;area&quot;) ~= nil then
			aname = inst:sub(13,inst:len())
			createRoom(&quot;&quot;,aname)
			echo(&quot;area &quot;..aname..&quot; created\n&quot;)
		end
	elseif inst:find(&quot;describe&quot;) ~= nil then
		if inst:find(&quot;room&quot;) ~= nil then
			rid = inst:sub(15,inst:len())
			if roomExists(rid) then describeRoom(rid)
			else echo(&quot;room &quot;..rid..&quot; does not exist\n&quot;) end
		end
	elseif inst:find(&quot;rename&quot;) ~= nil then
		if inst:find(&quot;room&quot;) ~= nil then
			rname = inst:sub(13,inst:len())
			if current_room ~= nil then setRoomName(current_room,rname) describeRoom(current_room)
			else echo(&quot;I don't know where I am.\n&quot;) end
		end
	elseif inst:find(&quot;where am i&quot;) then
		if current_room ~= nil then describeRoom(current_room)
		else echo(&quot;I don't know where I am.\n&quot;) end
	elseif inst == &quot;manual on&quot; then manual_map = true auto_map = false echo(&quot;manual mapping enabled\n&quot;)
	elseif inst == &quot;manual off&quot; then manual_map = false echo(&quot;manual mapping disabled\n&quot;)
	elseif inst == &quot;auto on&quot; then auto_map = true manual_map = false echo(&quot;auto mapping enabled\n&quot;)
	elseif inst == &quot;auto off&quot; then auto_map = false echo(&quot;auto mapping disabled\n&quot;)
	else echo(&quot;Map command not found\n&quot;)
	end
end

function inverseDirection(direction)
	if direction == &quot;n&quot; then return &quot;s&quot;
	elseif direction == &quot;s&quot; then return &quot;n&quot;
	elseif direction == &quot;e&quot; then return &quot;w&quot;
	elseif direction == &quot;w&quot; then return &quot;e&quot;
	elseif direction == &quot;ne&quot; then return &quot;sw&quot;
	elseif direction == &quot;nw&quot; then return &quot;se&quot;
	elseif direction == &quot;se&quot; then return &quot;nw&quot;
	elseif direction == &quot;sw&quot; then return &quot;ne&quot;
	elseif direction == &quot;u&quot; then return &quot;d&quot;
	elseif direction == &quot;d&quot; then return &quot;u&quot;
	end
end

function longDirection(direction)
	if direction == &quot;n&quot; then return &quot;north&quot;
	elseif direction == &quot;s&quot; then return &quot;south&quot;
	elseif direction == &quot;e&quot; then return &quot;east&quot;
	elseif direction == &quot;w&quot; then return &quot;west&quot;
	elseif direction == &quot;ne&quot; then return &quot;northeast&quot;
	elseif direction == &quot;nw&quot; then return &quot;northwest&quot;
	elseif direction == &quot;se&quot; then return &quot;southeast&quot;
	elseif direction == &quot;sw&quot; then return &quot;southwest&quot;
	elseif direction == &quot;u&quot; then return &quot;up&quot;
	elseif direction == &quot;d&quot; then return &quot;down&quot;
	end
end

function targetPosition()
	if current_room == nil then
		return 0,0,0
	else
		x,y,z = getRoomCoordinates(current_room)

		if last_movement:find(&quot;n&quot;) ~= nil then y = y + 2 end
		if last_movement:find(&quot;s&quot;) ~= nil then y = y - 2 end
		if last_movement:find(&quot;e&quot;) ~= nil then x = x + 2 end
		if last_movement:find(&quot;w&quot;) ~= nil then x = x - 2 end
		if last_movement:find(&quot;u&quot;) ~= nil then z = z + 2
		elseif last_movement:find(&quot;d&quot;) ~= nil then z = z - 2
		end

		return x,y,z
	end
end

function findAreaID(areaname)
  local list = getAreaTable()
 
  -- iterate over the list of areas, matching them with substring match. 
  -- if we get match a single area, then return it's ID, otherwise return
  -- 'false' and a message that there are than one are matches
  local returnid, fullareaname
  for area, id in pairs(list) do
    if area:find(areaname, 1, true) then
      if returnid then return false, &quot;more than one area matches&quot; end
      returnid = id; fullareaname = area
    end
  end
 
  return returnid, fullareaname
end

function split(str,c)
	aCount = 0
	array = {}
	a = string.find(str, c)

	while a do
		array[aCount] = string.sub(str, 1, a - 1)

		aCount = aCount + 1
		array[aCount] = string.sub(str, a + 1, string.len(str))
		a = string.find(array[aCount], c)
		str = array[aCount]
	end
	return array
end</script>
                <eventHandlerList/>
            </Script>
        </ScriptGroup>
    </ScriptPackage>
    <KeyPackage/>
</MudletPackage>
